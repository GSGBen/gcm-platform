name: Show effects of deployment

on:
  pull_request:
    branches:
      - main
  workflow_dispatch: {}

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  managementGroupPrefix: "GSM"
  location: "Australia East"
  MANAGEMENT_SUBSCRIPTION_ID: ${{ vars.MANAGEMENT_SUBSCRIPTION_ID }}
  CONNECTIVITY_SUBSCRIPTION_ID: ${{ vars.CONNECTIVITY_SUBSCRIPTION_ID }}

jobs:
  bicep_tenant_test_deploy:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: OIDC Azure login
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }} 
          enable-AzPSSession: true

      # # have to use the CLI here because the native github action doesn't support tenant-scoped deployments
      # - name: Az CLI What-If Deploy Management Groups
      #   id: test_create_mgs
      #   shell: bash
      #   # extra code to:
      #   # - store the multiline output and retrieve it later. see
      #   #   https://docs.github.com/en/actions/using-workflows/workflow-commands-for-github-actions#multiline-strings
      #   # - fix up the \r / carriage return / ^M characters the pretty-printed output
      #   #   shows. Files work with linebreaks, Variables don't seem to.
      #   run: |
      #     az deployment tenant what-if \
      #       --template-file src/managementGroups.bicep \
      #       --name test_create_mgs-${{ github.run_number }} \
      #       --location "$location" \
      #       | pipeline/github_output.sh

      # # use the CLI from here on as well because the native action doesn't give us all
      # # CLI output
      # - name: Az CLI What-If Deploy Custom Policy Definitions
      #   id: test_create_policy_defs
      #   shell: bash
      #   run: |
      #     az deployment mg what-if \
      #       --template-file src/customPolicyDefinitions.bicep \
      #       --name test_create_policy_defs-${{ github.run_number }} \
      #       --location "$location" \
      #       --result-format ResourceIdOnly \
      #       --management-group-id "$managementGroupPrefix" \
      #       | pipeline/github_output.sh

      # - name: Az CLI What-If Deploy Custom Role Definitions
      #   id: test_create_role_defs
      #   shell: bash
      #   run: |
      #     az deployment mg what-if \
      #       --template-file src/customRoleDefinitions.bicep \
      #       --name test_create_role_defs-${{ github.run_number }} \
      #       --location "$location" \
      #       --management-group-id "$managementGroupPrefix" \
      #       | pipeline/github_output.sh

      - name: Az CLI What-If Deploy Logging
        id: test_create_logging
        shell: bash
        run: |
          echo "$MANAGEMENT_SUBSCRIPTION_ID"
          echo $MANAGEMENT_SUBSCRIPTION_ID
          #az account set --subscription "$MANAGEMENT_SUBSCRIPTION_ID"

          az deployment sub what-if \
            --template-file src/logging.bicep \
            --name test_create_logging-${{ github.run_number }} \
            --location "$location" \
            --subscription "$MANAGEMENT_SUBSCRIPTION_ID" \
            | pipeline/github_output.sh

      # - name: Az CLI What-If Deploy Management Group Diagnostic Settings
      #   id: test_create_mg_diag
      #   shell: bash
      #   run: |
      #     # log analytics workspace ID is a placeholder - no previous value to pull at
      #     # this stage
      #     az deployment mg what-if \
      #       --template-file src/mgDiagSettings.bicep \
      #       --name test_create_mg_diag-${{ github.run_number }} \
      #       --location "$location" \
      #       --management-group-id "$managementGroupPrefix" \
      #       --parameters parLogAnalyticsWorkspaceResourceId=xxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxxx \
      #       | pipeline/github_output.sh

      # - name: Az CLI What-If Deploy Hub Networking
      #   id: test_create_hub_networking
      #   shell: bash
      #   run: |
      #     az deployment sub what-if \
      #       --template-file src/hubNetworking.bicep \
      #       --name test_create_hub_networking-${{ github.run_number }} \
      #       --location "$location" \
      #       --subscription "$CONNECTIVITY_SUBSCRIPTION_ID" \
      #       | pipeline/github_output.sh

      # - name: attach output to pull request
      #   if: github.event_name == 'pull_request'
      #   uses: actions/github-script@v3
      #   env:
      #     BODY: |
      #       Management Group changes:

      #       ```
      #       ${{ steps.test_create_mgs.outputs.OUTPUT }}
      #       ```
      #       Policy definition changes:

      #       ```
      #       ${{ steps.test_create_policy_defs.outputs.OUTPUT }}
            
      #       ```

      #       Role definition changes:

      #       ```
      #       ${{ steps.test_create_role_defs.outputs.OUTPUT }}
            
      #       ```

      #       Logging changes:

      #       ```
      #       ${{ steps.test_create_logging.outputs.OUTPUT }}
            
      #       ```

      #       Management Group Diagnostic Settings changes:

      #       ```
      #       ${{ steps.test_create_mg_diag.outputs.OUTPUT }}
            
      #       ```

      #       Hub Networking changes:

      #       ```
      #       ${{ steps.test_create_hub_networking.outputs.OUTPUT }}
            
      #       ```
            
      #   with:
      #     github-token: ${{secrets.GITHUB_TOKEN}}
      #     script: |
      #       github.issues.createComment({
      #         issue_number: context.issue.number,
      #         owner: context.repo.owner,
      #         repo: context.repo.repo,
      #         body: process.env.BODY
      #       })
      

